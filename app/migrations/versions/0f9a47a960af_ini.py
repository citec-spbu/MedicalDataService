"""ini

Revision ID: 0f9a47a960af
Revises: 
Create Date: 2024-12-21 22:11:14.053075

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0f9a47a960af'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('sex', sa.String(length=1), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('issuer', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(length=40), nullable=False),
    sa.Column('password', sa.String(length=60), nullable=False),
    sa.Column('role', sa.Enum('TECHNICAL', 'UPLOADER', 'MODERATOR', 'ADMIN', name='userrole'), server_default='TECHNICAL', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nickname')
    )
    op.create_table('deferred_operations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requester_id', sa.Integer(), nullable=False),
    sa.Column('loading_state', sa.Float(), server_default='0.0', nullable=False),
    sa.Column('request_type', sa.Enum('UPLOADING', 'INDEXING', 'EXPORT', name='requesttype'), nullable=False),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dicom_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uploader_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('upload_date', sa.Date(), server_default=sa.text('(CURRENT_DATE)'), nullable=False),
    sa.Column('upload_time', sa.Time(), server_default=sa.text('(CURRENT_TIME)'), nullable=False),
    sa.Column('minio_path', sa.String(length=512), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['uploader_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_hash', name='uq_file_hash')
    )
    op.create_table('studies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_uid', sa.String(length=64), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.Column('accession_number', sa.String(length=16), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('time', sa.Time(), nullable=True),
    sa.Column('modalities', sa.ARRAY(sa.String(length=16)), server_default='{}', nullable=False),
    sa.Column('series_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('instances_count', sa.Integer(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instance_uid')
    )
    op.create_table('series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_uid', sa.String(length=64), nullable=False),
    sa.Column('study_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.Column('modality', sa.String(length=16), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('time', sa.Time(), nullable=True),
    sa.Column('character_set', sa.String(length=16), nullable=True),
    sa.Column('manufacturer', sa.String(length=64), nullable=True),
    sa.Column('physician_name', sa.String(length=64), nullable=True),
    sa.Column('manufacturer_model_name', sa.String(length=64), nullable=True),
    sa.Column('instances_count', sa.Integer(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['studies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instance_uid')
    )
    op.create_table('instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sop_instance_uid', sa.String(length=64), nullable=False),
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('dicom_file_id', sa.Integer(), nullable=False),
    sa.Column('dicom_file_name', sa.String(length=64), nullable=False),
    sa.Column('check_sum', sa.String(length=64), nullable=False),
    sa.Column('metadata_', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('pixel_data_path', sa.String(length=512), nullable=False),
    sa.ForeignKeyConstraint(['dicom_file_id'], ['dicom_files.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sop_instance_uid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('instances')
    op.drop_table('series')
    op.drop_table('studies')
    op.drop_table('dicom_files')
    op.drop_table('deferred_operations')
    op.drop_table('users')
    op.drop_table('patients')
    # ### end Alembic commands ###
